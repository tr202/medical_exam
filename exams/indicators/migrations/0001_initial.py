# Generated by Django 4.2.5 on 2023-09-13 19:57

import uuid

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("public", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Indicators",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=300)),
            ],
            options={
                "verbose_name": "Indicator",
                "verbose_name_plural": "Indicators",
            },
        ),
        migrations.CreateModel(
            name="IndicatorsMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                (
                    "indicator_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="metrics_indicators",
                        to="indicators.indicators",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Metrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=300)),
                ("unit", models.CharField(max_length=30)),
            ],
            options={
                "verbose_name": "Metric",
                "verbose_name_plural": "Metrics",
            },
        ),
        migrations.CreateModel(
            name="Scores",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("score", models.DecimalField(decimal_places=5, max_digits=9)),
                (
                    "indicator_metric_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="indicators.indicatorsmetrics",
                    ),
                ),
                (
                    "test_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="public.tests",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="References",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("min_score", models.DecimalField(decimal_places=2, max_digits=6)),
                ("max_score", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "indicator_metric_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="indicators.indicatorsmetrics",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="indicatorsmetrics",
            name="metric_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="indicators_metrics",
                to="indicators.metrics",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="scores",
            trigger=pgtrigger.compiler.Trigger(
                name="catch_update_timestamp",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.updated_at = now(); RETURN NEW;",
                    hash="908cddd365e994a0eb99e094079aec63608925f4",
                    operation="UPDATE",
                    pgid="pgtrigger_catch_update_timestamp_85f46",
                    table="indicators_scores",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="references",
            trigger=pgtrigger.compiler.Trigger(
                name="catch_update_timestamp",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.updated_at = now(); RETURN NEW;",
                    hash="853e52c1c9f7ab42c29ae28a2bf9ea0aab3f8a4d",
                    operation="UPDATE",
                    pgid="pgtrigger_catch_update_timestamp_8e2af",
                    table="indicators_references",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="indicatorsmetrics",
            trigger=pgtrigger.compiler.Trigger(
                name="catch_update_timestamp",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.updated_at = now(); RETURN NEW;",
                    hash="085ae4d209593a9d95e7f7f31bcebb85c7ac9cc8",
                    operation="UPDATE",
                    pgid="pgtrigger_catch_update_timestamp_c4d69",
                    table="indicators_indicatorsmetrics",
                    when="BEFORE",
                ),
            ),
        ),
    ]
